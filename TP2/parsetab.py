
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND Diff Equal GoE Greater LoE Lower NOT Nint ORNeg : NOTNeg : LogicSymb : OR LogicSymb : ANDCondition : Expression OpRel ExpressionCondition : ExpressionOpRel : GoEOpRel : LoEOpRel : LowerOpRel : GreaterOpRel : EqualOpRel : DiffExpression : Vals Expression : Expression '+' Vals Expression : Expression '-' Vals Vals : NatureVals : Vals '*' NatureVals : Vals '/' NatureNature : NintNature : '(' Expression ')' "
    
_lr_action_items = {'NOT':([0,],[2,]),'$end':([0,1,2,],[-2,0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Neg':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Neg","S'",1,None,None,None),
  ('Neg -> NOT','Neg',1,'p_negacaoLogica','compiler_yacc.py',18),
  ('Neg -> <empty>','Neg',0,'p_negacao_empty','compiler_yacc.py',22),
  ('LogicSymb -> OR','LogicSymb',1,'p_logicSymbol_OR','compiler_yacc.py',31),
  ('LogicSymb -> AND','LogicSymb',1,'p_logicSymbol_And','compiler_yacc.py',35),
  ('Condition -> Expression OpRel Expression','Condition',3,'p_condition_complex','compiler_yacc.py',43),
  ('Condition -> Expression','Condition',1,'p_condition_simple','compiler_yacc.py',46),
  ('OpRel -> GoE','OpRel',1,'p_opRel_GoE','compiler_yacc.py',58),
  ('OpRel -> LoE','OpRel',1,'p_opRel_LoE','compiler_yacc.py',61),
  ('OpRel -> Lower','OpRel',1,'p_opRel_Lower','compiler_yacc.py',64),
  ('OpRel -> Greater','OpRel',1,'p_opRel_Greater','compiler_yacc.py',67),
  ('OpRel -> Equal','OpRel',1,'p_opRel_Equal','compiler_yacc.py',70),
  ('OpRel -> Diff','OpRel',1,'p_opRel_Diff','compiler_yacc.py',73),
  ('Expression -> Vals','Expression',1,'p_expression_simple','compiler_yacc.py',82),
  ('Expression -> Expression + Vals','Expression',3,'p_expression_plus','compiler_yacc.py',85),
  ('Expression -> Expression - Vals','Expression',3,'p_expression_less','compiler_yacc.py',89),
  ('Vals -> Nature','Vals',1,'p_vals_simple','compiler_yacc.py',97),
  ('Vals -> Vals * Nature','Vals',3,'p_vals_1','compiler_yacc.py',100),
  ('Vals -> Vals / Nature','Vals',3,'p_vals_2','compiler_yacc.py',104),
  ('Nature -> Nint','Nature',1,'p_nature_int','compiler_yacc.py',110),
  ('Nature -> ( Expression )','Nature',3,'p_nature_complex','compiler_yacc.py',114),
]
