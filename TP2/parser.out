Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Neg
Rule 1     Neg -> NOT
Rule 2     Neg -> <empty>
Rule 3     LogicSymb -> OR
Rule 4     LogicSymb -> AND
Rule 5     Condition -> Expression OpRel Expression
Rule 6     Condition -> Expression
Rule 7     OpRel -> GoE
Rule 8     OpRel -> LoE
Rule 9     OpRel -> Lower
Rule 10    OpRel -> Greater
Rule 11    OpRel -> Equal
Rule 12    OpRel -> Diff
Rule 13    Expression -> Vals
Rule 14    Expression -> Expression + Vals
Rule 15    Expression -> Expression - Vals
Rule 16    Vals -> Nature
Rule 17    Vals -> Vals * Nature
Rule 18    Vals -> Vals / Nature
Rule 19    Nature -> Nint
Rule 20    Nature -> ( Expression )

Terminals, with rules where they appear

(                    : 20
)                    : 20
*                    : 17
+                    : 14
-                    : 15
/                    : 18
AND                  : 4
Diff                 : 12
Equal                : 11
GoE                  : 7
Greater              : 10
LoE                  : 8
Lower                : 9
NOT                  : 1
Nint                 : 19
OR                   : 3
error                : 

Nonterminals, with rules where they appear

Condition            : 
Expression           : 5 5 6 14 15 20
LogicSymb            : 
Nature               : 16 17 18
Neg                  : 0
OpRel                : 5
Vals                 : 13 14 15 17 18

Parsing method: LALR

state 0

    (0) S' -> . Neg
    (1) Neg -> . NOT
    (2) Neg -> .

    NOT             shift and go to state 2
    $end            reduce using rule 2 (Neg -> .)

    Neg                            shift and go to state 1

state 1

    (0) S' -> Neg .



state 2

    (1) Neg -> NOT .

    $end            reduce using rule 1 (Neg -> NOT .)

