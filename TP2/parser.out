Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Comands
Rule 2     Comands -> Comand Comands
Rule 3     Comands -> Comand
Rule 4     Comand -> Atribuition
Rule 5     Comand -> Conditional
Rule 6     Comand -> Expression
Rule 7     Comand -> Cycle
Rule 8     Comand -> IO
Rule 9     Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC
Rule 10    Conditional -> IF AP Condition FP AC Comands FC
Rule 11    Condition -> Condition OR Condition2
Rule 12    Condition -> Condition2
Rule 13    Condition2 -> Condition2 AND Condition3
Rule 14    Condition2 -> Condition3
Rule 15    Condition3 -> Neg Condition
Rule 16    Condition3 -> RelExpression
Rule 17    Condition3 -> AP Condition FP
Rule 18    RelExpression -> Expression OpRel Expression
Rule 19    RelExpression -> Expression
Rule 20    Neg -> NOT
Rule 21    Neg -> <empty>
Rule 22    OpRel -> GoE
Rule 23    OpRel -> LoE
Rule 24    OpRel -> Lower
Rule 25    OpRel -> Greater
Rule 26    OpRel -> IGUAL
Rule 27    OpRel -> DIFF
Rule 28    Cycle -> WHILE AP Condition FP AC Comands FC
Rule 29    Atribuition -> INT VAR EQUAL Expression
Rule 30    Atribuition -> VAR EQUAL Expression
Rule 31    Atribuition -> INT VAR
Rule 32    Expression -> Values
Rule 33    Expression -> Expression ADD Values
Rule 34    Expression -> Expression SUB Values
Rule 35    Values -> Value
Rule 36    Values -> Values MUL Value
Rule 37    Values -> Values DIV Value
Rule 38    Values -> Values MOD Value
Rule 39    Value -> Nint
Rule 40    Value -> VAR
Rule 41    Value -> AP Expression FP
Rule 42    IO -> INPUT
Rule 43    IO -> OUTPUT
Rule 44    INPUT -> SCAN Expression
Rule 45    OUTPUT -> PRINT VAR

Terminals, with rules where they appear

AC                   : 9 9 10 28
ADD                  : 33
AND                  : 13
AP                   : 9 10 17 28 41
DIFF                 : 27
DIV                  : 37
ELSE                 : 9
EQUAL                : 29 30
FC                   : 9 9 10 28
FP                   : 9 10 17 28 41
GoE                  : 22
Greater              : 25
IF                   : 9 10
IGUAL                : 26
INT                  : 29 31
LoE                  : 23
Lower                : 24
MOD                  : 38
MUL                  : 36
NOT                  : 20
Nint                 : 39
OR                   : 11
PRINT                : 45
SCAN                 : 44
SUB                  : 34
VAR                  : 29 30 31 40 45
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

Atribuition          : 4
Comand               : 2 3
Comands              : 1 2 9 9 10 28
Condition            : 9 10 11 15 17 28
Condition2           : 11 12 13
Condition3           : 13 14
Conditional          : 5
Cycle                : 7
Expression           : 6 18 18 19 29 30 33 34 41 44
INPUT                : 42
IO                   : 8
Neg                  : 15
OUTPUT               : 43
OpRel                : 18
Program              : 0
RelExpression        : 16
Value                : 35 36 37 38
Values               : 32 33 34 36 37 38

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Comands
    (2) Comands -> . Comand Comands
    (3) Comands -> . Comand
    (4) Comand -> . Atribuition
    (5) Comand -> . Conditional
    (6) Comand -> . Expression
    (7) Comand -> . Cycle
    (8) Comand -> . IO
    (29) Atribuition -> . INT VAR EQUAL Expression
    (30) Atribuition -> . VAR EQUAL Expression
    (31) Atribuition -> . INT VAR
    (9) Conditional -> . IF AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> . IF AP Condition FP AC Comands FC
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (28) Cycle -> . WHILE AP Condition FP AC Comands FC
    (42) IO -> . INPUT
    (43) IO -> . OUTPUT
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (44) INPUT -> . SCAN Expression
    (45) OUTPUT -> . PRINT VAR
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    INT             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 14
    SCAN            shift and go to state 18
    PRINT           shift and go to state 19
    Nint            shift and go to state 20
    AP              shift and go to state 12

    Program                        shift and go to state 1
    Comands                        shift and go to state 2
    Comand                         shift and go to state 3
    Atribuition                    shift and go to state 4
    Conditional                    shift and go to state 5
    Expression                     shift and go to state 6
    Cycle                          shift and go to state 7
    IO                             shift and go to state 8
    Values                         shift and go to state 13
    INPUT                          shift and go to state 15
    OUTPUT                         shift and go to state 16
    Value                          shift and go to state 17

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Comands .

    $end            reduce using rule 1 (Program -> Comands .)


state 3

    (2) Comands -> Comand . Comands
    (3) Comands -> Comand .
    (2) Comands -> . Comand Comands
    (3) Comands -> . Comand
    (4) Comand -> . Atribuition
    (5) Comand -> . Conditional
    (6) Comand -> . Expression
    (7) Comand -> . Cycle
    (8) Comand -> . IO
    (29) Atribuition -> . INT VAR EQUAL Expression
    (30) Atribuition -> . VAR EQUAL Expression
    (31) Atribuition -> . INT VAR
    (9) Conditional -> . IF AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> . IF AP Condition FP AC Comands FC
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (28) Cycle -> . WHILE AP Condition FP AC Comands FC
    (42) IO -> . INPUT
    (43) IO -> . OUTPUT
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (44) INPUT -> . SCAN Expression
    (45) OUTPUT -> . PRINT VAR
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    $end            reduce using rule 3 (Comands -> Comand .)
    FC              reduce using rule 3 (Comands -> Comand .)
    INT             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 14
    SCAN            shift and go to state 18
    PRINT           shift and go to state 19
    Nint            shift and go to state 20
    AP              shift and go to state 12

    Comand                         shift and go to state 3
    Comands                        shift and go to state 21
    Atribuition                    shift and go to state 4
    Conditional                    shift and go to state 5
    Expression                     shift and go to state 6
    Cycle                          shift and go to state 7
    IO                             shift and go to state 8
    Values                         shift and go to state 13
    INPUT                          shift and go to state 15
    OUTPUT                         shift and go to state 16
    Value                          shift and go to state 17

state 4

    (4) Comand -> Atribuition .

    INT             reduce using rule 4 (Comand -> Atribuition .)
    VAR             reduce using rule 4 (Comand -> Atribuition .)
    IF              reduce using rule 4 (Comand -> Atribuition .)
    WHILE           reduce using rule 4 (Comand -> Atribuition .)
    SCAN            reduce using rule 4 (Comand -> Atribuition .)
    PRINT           reduce using rule 4 (Comand -> Atribuition .)
    Nint            reduce using rule 4 (Comand -> Atribuition .)
    AP              reduce using rule 4 (Comand -> Atribuition .)
    $end            reduce using rule 4 (Comand -> Atribuition .)
    FC              reduce using rule 4 (Comand -> Atribuition .)


state 5

    (5) Comand -> Conditional .

    INT             reduce using rule 5 (Comand -> Conditional .)
    VAR             reduce using rule 5 (Comand -> Conditional .)
    IF              reduce using rule 5 (Comand -> Conditional .)
    WHILE           reduce using rule 5 (Comand -> Conditional .)
    SCAN            reduce using rule 5 (Comand -> Conditional .)
    PRINT           reduce using rule 5 (Comand -> Conditional .)
    Nint            reduce using rule 5 (Comand -> Conditional .)
    AP              reduce using rule 5 (Comand -> Conditional .)
    $end            reduce using rule 5 (Comand -> Conditional .)
    FC              reduce using rule 5 (Comand -> Conditional .)


state 6

    (6) Comand -> Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    INT             reduce using rule 6 (Comand -> Expression .)
    VAR             reduce using rule 6 (Comand -> Expression .)
    IF              reduce using rule 6 (Comand -> Expression .)
    WHILE           reduce using rule 6 (Comand -> Expression .)
    SCAN            reduce using rule 6 (Comand -> Expression .)
    PRINT           reduce using rule 6 (Comand -> Expression .)
    Nint            reduce using rule 6 (Comand -> Expression .)
    AP              reduce using rule 6 (Comand -> Expression .)
    $end            reduce using rule 6 (Comand -> Expression .)
    FC              reduce using rule 6 (Comand -> Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 7

    (7) Comand -> Cycle .

    INT             reduce using rule 7 (Comand -> Cycle .)
    VAR             reduce using rule 7 (Comand -> Cycle .)
    IF              reduce using rule 7 (Comand -> Cycle .)
    WHILE           reduce using rule 7 (Comand -> Cycle .)
    SCAN            reduce using rule 7 (Comand -> Cycle .)
    PRINT           reduce using rule 7 (Comand -> Cycle .)
    Nint            reduce using rule 7 (Comand -> Cycle .)
    AP              reduce using rule 7 (Comand -> Cycle .)
    $end            reduce using rule 7 (Comand -> Cycle .)
    FC              reduce using rule 7 (Comand -> Cycle .)


state 8

    (8) Comand -> IO .

    INT             reduce using rule 8 (Comand -> IO .)
    VAR             reduce using rule 8 (Comand -> IO .)
    IF              reduce using rule 8 (Comand -> IO .)
    WHILE           reduce using rule 8 (Comand -> IO .)
    SCAN            reduce using rule 8 (Comand -> IO .)
    PRINT           reduce using rule 8 (Comand -> IO .)
    Nint            reduce using rule 8 (Comand -> IO .)
    AP              reduce using rule 8 (Comand -> IO .)
    $end            reduce using rule 8 (Comand -> IO .)
    FC              reduce using rule 8 (Comand -> IO .)


state 9

    (29) Atribuition -> INT . VAR EQUAL Expression
    (31) Atribuition -> INT . VAR

    VAR             shift and go to state 24


state 10

    (30) Atribuition -> VAR . EQUAL Expression
    (40) Value -> VAR .

    EQUAL           shift and go to state 25
    MUL             reduce using rule 40 (Value -> VAR .)
    DIV             reduce using rule 40 (Value -> VAR .)
    MOD             reduce using rule 40 (Value -> VAR .)
    ADD             reduce using rule 40 (Value -> VAR .)
    SUB             reduce using rule 40 (Value -> VAR .)
    INT             reduce using rule 40 (Value -> VAR .)
    VAR             reduce using rule 40 (Value -> VAR .)
    IF              reduce using rule 40 (Value -> VAR .)
    WHILE           reduce using rule 40 (Value -> VAR .)
    SCAN            reduce using rule 40 (Value -> VAR .)
    PRINT           reduce using rule 40 (Value -> VAR .)
    Nint            reduce using rule 40 (Value -> VAR .)
    AP              reduce using rule 40 (Value -> VAR .)
    $end            reduce using rule 40 (Value -> VAR .)
    FC              reduce using rule 40 (Value -> VAR .)


state 11

    (9) Conditional -> IF . AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> IF . AP Condition FP AC Comands FC

    AP              shift and go to state 26


state 12

    (41) Value -> AP . Expression FP
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Expression                     shift and go to state 27
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 13

    (32) Expression -> Values .
    (36) Values -> Values . MUL Value
    (37) Values -> Values . DIV Value
    (38) Values -> Values . MOD Value

    ADD             reduce using rule 32 (Expression -> Values .)
    SUB             reduce using rule 32 (Expression -> Values .)
    INT             reduce using rule 32 (Expression -> Values .)
    VAR             reduce using rule 32 (Expression -> Values .)
    IF              reduce using rule 32 (Expression -> Values .)
    WHILE           reduce using rule 32 (Expression -> Values .)
    SCAN            reduce using rule 32 (Expression -> Values .)
    PRINT           reduce using rule 32 (Expression -> Values .)
    Nint            reduce using rule 32 (Expression -> Values .)
    AP              reduce using rule 32 (Expression -> Values .)
    $end            reduce using rule 32 (Expression -> Values .)
    FC              reduce using rule 32 (Expression -> Values .)
    FP              reduce using rule 32 (Expression -> Values .)
    GoE             reduce using rule 32 (Expression -> Values .)
    LoE             reduce using rule 32 (Expression -> Values .)
    Lower           reduce using rule 32 (Expression -> Values .)
    Greater         reduce using rule 32 (Expression -> Values .)
    IGUAL           reduce using rule 32 (Expression -> Values .)
    DIFF            reduce using rule 32 (Expression -> Values .)
    AND             reduce using rule 32 (Expression -> Values .)
    OR              reduce using rule 32 (Expression -> Values .)
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    MOD             shift and go to state 31


state 14

    (28) Cycle -> WHILE . AP Condition FP AC Comands FC

    AP              shift and go to state 32


state 15

    (42) IO -> INPUT .

    INT             reduce using rule 42 (IO -> INPUT .)
    VAR             reduce using rule 42 (IO -> INPUT .)
    IF              reduce using rule 42 (IO -> INPUT .)
    WHILE           reduce using rule 42 (IO -> INPUT .)
    SCAN            reduce using rule 42 (IO -> INPUT .)
    PRINT           reduce using rule 42 (IO -> INPUT .)
    Nint            reduce using rule 42 (IO -> INPUT .)
    AP              reduce using rule 42 (IO -> INPUT .)
    $end            reduce using rule 42 (IO -> INPUT .)
    FC              reduce using rule 42 (IO -> INPUT .)


state 16

    (43) IO -> OUTPUT .

    INT             reduce using rule 43 (IO -> OUTPUT .)
    VAR             reduce using rule 43 (IO -> OUTPUT .)
    IF              reduce using rule 43 (IO -> OUTPUT .)
    WHILE           reduce using rule 43 (IO -> OUTPUT .)
    SCAN            reduce using rule 43 (IO -> OUTPUT .)
    PRINT           reduce using rule 43 (IO -> OUTPUT .)
    Nint            reduce using rule 43 (IO -> OUTPUT .)
    AP              reduce using rule 43 (IO -> OUTPUT .)
    $end            reduce using rule 43 (IO -> OUTPUT .)
    FC              reduce using rule 43 (IO -> OUTPUT .)


state 17

    (35) Values -> Value .

    MUL             reduce using rule 35 (Values -> Value .)
    DIV             reduce using rule 35 (Values -> Value .)
    MOD             reduce using rule 35 (Values -> Value .)
    ADD             reduce using rule 35 (Values -> Value .)
    SUB             reduce using rule 35 (Values -> Value .)
    INT             reduce using rule 35 (Values -> Value .)
    VAR             reduce using rule 35 (Values -> Value .)
    IF              reduce using rule 35 (Values -> Value .)
    WHILE           reduce using rule 35 (Values -> Value .)
    SCAN            reduce using rule 35 (Values -> Value .)
    PRINT           reduce using rule 35 (Values -> Value .)
    Nint            reduce using rule 35 (Values -> Value .)
    AP              reduce using rule 35 (Values -> Value .)
    $end            reduce using rule 35 (Values -> Value .)
    FC              reduce using rule 35 (Values -> Value .)
    FP              reduce using rule 35 (Values -> Value .)
    GoE             reduce using rule 35 (Values -> Value .)
    LoE             reduce using rule 35 (Values -> Value .)
    Lower           reduce using rule 35 (Values -> Value .)
    Greater         reduce using rule 35 (Values -> Value .)
    IGUAL           reduce using rule 35 (Values -> Value .)
    DIFF            reduce using rule 35 (Values -> Value .)
    AND             reduce using rule 35 (Values -> Value .)
    OR              reduce using rule 35 (Values -> Value .)


state 18

    (44) INPUT -> SCAN . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Expression                     shift and go to state 33
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 19

    (45) OUTPUT -> PRINT . VAR

    VAR             shift and go to state 34


state 20

    (39) Value -> Nint .

    MUL             reduce using rule 39 (Value -> Nint .)
    DIV             reduce using rule 39 (Value -> Nint .)
    MOD             reduce using rule 39 (Value -> Nint .)
    ADD             reduce using rule 39 (Value -> Nint .)
    SUB             reduce using rule 39 (Value -> Nint .)
    INT             reduce using rule 39 (Value -> Nint .)
    VAR             reduce using rule 39 (Value -> Nint .)
    IF              reduce using rule 39 (Value -> Nint .)
    WHILE           reduce using rule 39 (Value -> Nint .)
    SCAN            reduce using rule 39 (Value -> Nint .)
    PRINT           reduce using rule 39 (Value -> Nint .)
    Nint            reduce using rule 39 (Value -> Nint .)
    AP              reduce using rule 39 (Value -> Nint .)
    $end            reduce using rule 39 (Value -> Nint .)
    FC              reduce using rule 39 (Value -> Nint .)
    FP              reduce using rule 39 (Value -> Nint .)
    GoE             reduce using rule 39 (Value -> Nint .)
    LoE             reduce using rule 39 (Value -> Nint .)
    Lower           reduce using rule 39 (Value -> Nint .)
    Greater         reduce using rule 39 (Value -> Nint .)
    IGUAL           reduce using rule 39 (Value -> Nint .)
    DIFF            reduce using rule 39 (Value -> Nint .)
    AND             reduce using rule 39 (Value -> Nint .)
    OR              reduce using rule 39 (Value -> Nint .)


state 21

    (2) Comands -> Comand Comands .

    $end            reduce using rule 2 (Comands -> Comand Comands .)
    FC              reduce using rule 2 (Comands -> Comand Comands .)


state 22

    (33) Expression -> Expression ADD . Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Values                         shift and go to state 35
    Value                          shift and go to state 17

state 23

    (34) Expression -> Expression SUB . Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Values                         shift and go to state 36
    Value                          shift and go to state 17

state 24

    (29) Atribuition -> INT VAR . EQUAL Expression
    (31) Atribuition -> INT VAR .

    EQUAL           shift and go to state 37
    INT             reduce using rule 31 (Atribuition -> INT VAR .)
    VAR             reduce using rule 31 (Atribuition -> INT VAR .)
    IF              reduce using rule 31 (Atribuition -> INT VAR .)
    WHILE           reduce using rule 31 (Atribuition -> INT VAR .)
    SCAN            reduce using rule 31 (Atribuition -> INT VAR .)
    PRINT           reduce using rule 31 (Atribuition -> INT VAR .)
    Nint            reduce using rule 31 (Atribuition -> INT VAR .)
    AP              reduce using rule 31 (Atribuition -> INT VAR .)
    $end            reduce using rule 31 (Atribuition -> INT VAR .)
    FC              reduce using rule 31 (Atribuition -> INT VAR .)


state 25

    (30) Atribuition -> VAR EQUAL . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Expression                     shift and go to state 38
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 26

    (9) Conditional -> IF AP . Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> IF AP . Condition FP AC Comands FC
    (11) Condition -> . Condition OR Condition2
    (12) Condition -> . Condition2
    (13) Condition2 -> . Condition2 AND Condition3
    (14) Condition2 -> . Condition3
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    NOT             shift and go to state 45
    Nint            shift and go to state 20
    VAR             shift and go to state 28

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Condition                      shift and go to state 40
    Condition2                     shift and go to state 41
    Condition3                     shift and go to state 42
    Neg                            shift and go to state 43
    RelExpression                  shift and go to state 44
    Expression                     shift and go to state 46
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 27

    (41) Value -> AP Expression . FP
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    FP              shift and go to state 47
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 28

    (40) Value -> VAR .

    MUL             reduce using rule 40 (Value -> VAR .)
    DIV             reduce using rule 40 (Value -> VAR .)
    MOD             reduce using rule 40 (Value -> VAR .)
    FP              reduce using rule 40 (Value -> VAR .)
    ADD             reduce using rule 40 (Value -> VAR .)
    SUB             reduce using rule 40 (Value -> VAR .)
    INT             reduce using rule 40 (Value -> VAR .)
    VAR             reduce using rule 40 (Value -> VAR .)
    IF              reduce using rule 40 (Value -> VAR .)
    WHILE           reduce using rule 40 (Value -> VAR .)
    SCAN            reduce using rule 40 (Value -> VAR .)
    PRINT           reduce using rule 40 (Value -> VAR .)
    Nint            reduce using rule 40 (Value -> VAR .)
    AP              reduce using rule 40 (Value -> VAR .)
    $end            reduce using rule 40 (Value -> VAR .)
    FC              reduce using rule 40 (Value -> VAR .)
    GoE             reduce using rule 40 (Value -> VAR .)
    LoE             reduce using rule 40 (Value -> VAR .)
    Lower           reduce using rule 40 (Value -> VAR .)
    Greater         reduce using rule 40 (Value -> VAR .)
    IGUAL           reduce using rule 40 (Value -> VAR .)
    DIFF            reduce using rule 40 (Value -> VAR .)
    AND             reduce using rule 40 (Value -> VAR .)
    OR              reduce using rule 40 (Value -> VAR .)


state 29

    (36) Values -> Values MUL . Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Value                          shift and go to state 48

state 30

    (37) Values -> Values DIV . Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Value                          shift and go to state 49

state 31

    (38) Values -> Values MOD . Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Value                          shift and go to state 50

state 32

    (28) Cycle -> WHILE AP . Condition FP AC Comands FC
    (11) Condition -> . Condition OR Condition2
    (12) Condition -> . Condition2
    (13) Condition2 -> . Condition2 AND Condition3
    (14) Condition2 -> . Condition3
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    NOT             shift and go to state 45
    Nint            shift and go to state 20
    VAR             shift and go to state 28

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Condition                      shift and go to state 51
    Condition2                     shift and go to state 41
    Condition3                     shift and go to state 42
    Neg                            shift and go to state 43
    RelExpression                  shift and go to state 44
    Expression                     shift and go to state 46
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 33

    (44) INPUT -> SCAN Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    INT             reduce using rule 44 (INPUT -> SCAN Expression .)
    VAR             reduce using rule 44 (INPUT -> SCAN Expression .)
    IF              reduce using rule 44 (INPUT -> SCAN Expression .)
    WHILE           reduce using rule 44 (INPUT -> SCAN Expression .)
    SCAN            reduce using rule 44 (INPUT -> SCAN Expression .)
    PRINT           reduce using rule 44 (INPUT -> SCAN Expression .)
    Nint            reduce using rule 44 (INPUT -> SCAN Expression .)
    AP              reduce using rule 44 (INPUT -> SCAN Expression .)
    $end            reduce using rule 44 (INPUT -> SCAN Expression .)
    FC              reduce using rule 44 (INPUT -> SCAN Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 34

    (45) OUTPUT -> PRINT VAR .

    INT             reduce using rule 45 (OUTPUT -> PRINT VAR .)
    VAR             reduce using rule 45 (OUTPUT -> PRINT VAR .)
    IF              reduce using rule 45 (OUTPUT -> PRINT VAR .)
    WHILE           reduce using rule 45 (OUTPUT -> PRINT VAR .)
    SCAN            reduce using rule 45 (OUTPUT -> PRINT VAR .)
    PRINT           reduce using rule 45 (OUTPUT -> PRINT VAR .)
    Nint            reduce using rule 45 (OUTPUT -> PRINT VAR .)
    AP              reduce using rule 45 (OUTPUT -> PRINT VAR .)
    $end            reduce using rule 45 (OUTPUT -> PRINT VAR .)
    FC              reduce using rule 45 (OUTPUT -> PRINT VAR .)


state 35

    (33) Expression -> Expression ADD Values .
    (36) Values -> Values . MUL Value
    (37) Values -> Values . DIV Value
    (38) Values -> Values . MOD Value

    ADD             reduce using rule 33 (Expression -> Expression ADD Values .)
    SUB             reduce using rule 33 (Expression -> Expression ADD Values .)
    INT             reduce using rule 33 (Expression -> Expression ADD Values .)
    VAR             reduce using rule 33 (Expression -> Expression ADD Values .)
    IF              reduce using rule 33 (Expression -> Expression ADD Values .)
    WHILE           reduce using rule 33 (Expression -> Expression ADD Values .)
    SCAN            reduce using rule 33 (Expression -> Expression ADD Values .)
    PRINT           reduce using rule 33 (Expression -> Expression ADD Values .)
    Nint            reduce using rule 33 (Expression -> Expression ADD Values .)
    AP              reduce using rule 33 (Expression -> Expression ADD Values .)
    $end            reduce using rule 33 (Expression -> Expression ADD Values .)
    FC              reduce using rule 33 (Expression -> Expression ADD Values .)
    FP              reduce using rule 33 (Expression -> Expression ADD Values .)
    GoE             reduce using rule 33 (Expression -> Expression ADD Values .)
    LoE             reduce using rule 33 (Expression -> Expression ADD Values .)
    Lower           reduce using rule 33 (Expression -> Expression ADD Values .)
    Greater         reduce using rule 33 (Expression -> Expression ADD Values .)
    IGUAL           reduce using rule 33 (Expression -> Expression ADD Values .)
    DIFF            reduce using rule 33 (Expression -> Expression ADD Values .)
    AND             reduce using rule 33 (Expression -> Expression ADD Values .)
    OR              reduce using rule 33 (Expression -> Expression ADD Values .)
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    MOD             shift and go to state 31


state 36

    (34) Expression -> Expression SUB Values .
    (36) Values -> Values . MUL Value
    (37) Values -> Values . DIV Value
    (38) Values -> Values . MOD Value

    ADD             reduce using rule 34 (Expression -> Expression SUB Values .)
    SUB             reduce using rule 34 (Expression -> Expression SUB Values .)
    INT             reduce using rule 34 (Expression -> Expression SUB Values .)
    VAR             reduce using rule 34 (Expression -> Expression SUB Values .)
    IF              reduce using rule 34 (Expression -> Expression SUB Values .)
    WHILE           reduce using rule 34 (Expression -> Expression SUB Values .)
    SCAN            reduce using rule 34 (Expression -> Expression SUB Values .)
    PRINT           reduce using rule 34 (Expression -> Expression SUB Values .)
    Nint            reduce using rule 34 (Expression -> Expression SUB Values .)
    AP              reduce using rule 34 (Expression -> Expression SUB Values .)
    $end            reduce using rule 34 (Expression -> Expression SUB Values .)
    FC              reduce using rule 34 (Expression -> Expression SUB Values .)
    FP              reduce using rule 34 (Expression -> Expression SUB Values .)
    GoE             reduce using rule 34 (Expression -> Expression SUB Values .)
    LoE             reduce using rule 34 (Expression -> Expression SUB Values .)
    Lower           reduce using rule 34 (Expression -> Expression SUB Values .)
    Greater         reduce using rule 34 (Expression -> Expression SUB Values .)
    IGUAL           reduce using rule 34 (Expression -> Expression SUB Values .)
    DIFF            reduce using rule 34 (Expression -> Expression SUB Values .)
    AND             reduce using rule 34 (Expression -> Expression SUB Values .)
    OR              reduce using rule 34 (Expression -> Expression SUB Values .)
    MUL             shift and go to state 29
    DIV             shift and go to state 30
    MOD             shift and go to state 31


state 37

    (29) Atribuition -> INT VAR EQUAL . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Expression                     shift and go to state 52
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 38

    (30) Atribuition -> VAR EQUAL Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    INT             reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    VAR             reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    IF              reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    WHILE           reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    SCAN            reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    PRINT           reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    Nint            reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    AP              reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    $end            reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    FC              reduce using rule 30 (Atribuition -> VAR EQUAL Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 39

    (17) Condition3 -> AP . Condition FP
    (41) Value -> AP . Expression FP
    (11) Condition -> . Condition OR Condition2
    (12) Condition -> . Condition2
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (13) Condition2 -> . Condition2 AND Condition3
    (14) Condition2 -> . Condition3
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    Nint            shift and go to state 20
    VAR             shift and go to state 28
    NOT             shift and go to state 45

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Condition                      shift and go to state 53
    Expression                     shift and go to state 54
    Condition2                     shift and go to state 41
    Values                         shift and go to state 13
    Condition3                     shift and go to state 42
    Value                          shift and go to state 17
    Neg                            shift and go to state 43
    RelExpression                  shift and go to state 44

state 40

    (9) Conditional -> IF AP Condition . FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> IF AP Condition . FP AC Comands FC
    (11) Condition -> Condition . OR Condition2

    FP              shift and go to state 55
    OR              shift and go to state 56


state 41

    (12) Condition -> Condition2 .
    (13) Condition2 -> Condition2 . AND Condition3

  ! shift/reduce conflict for AND resolved as shift
    FP              reduce using rule 12 (Condition -> Condition2 .)
    OR              reduce using rule 12 (Condition -> Condition2 .)
    AND             shift and go to state 57

  ! AND             [ reduce using rule 12 (Condition -> Condition2 .) ]


state 42

    (14) Condition2 -> Condition3 .

    AND             reduce using rule 14 (Condition2 -> Condition3 .)
    FP              reduce using rule 14 (Condition2 -> Condition3 .)
    OR              reduce using rule 14 (Condition2 -> Condition3 .)


state 43

    (15) Condition3 -> Neg . Condition
    (11) Condition -> . Condition OR Condition2
    (12) Condition -> . Condition2
    (13) Condition2 -> . Condition2 AND Condition3
    (14) Condition2 -> . Condition3
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    NOT             shift and go to state 45
    Nint            shift and go to state 20
    VAR             shift and go to state 28

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Neg                            shift and go to state 43
    Condition                      shift and go to state 58
    Condition2                     shift and go to state 41
    Condition3                     shift and go to state 42
    RelExpression                  shift and go to state 44
    Expression                     shift and go to state 46
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 44

    (16) Condition3 -> RelExpression .

    AND             reduce using rule 16 (Condition3 -> RelExpression .)
    FP              reduce using rule 16 (Condition3 -> RelExpression .)
    OR              reduce using rule 16 (Condition3 -> RelExpression .)


state 45

    (20) Neg -> NOT .

    AP              reduce using rule 20 (Neg -> NOT .)
    NOT             reduce using rule 20 (Neg -> NOT .)
    Nint            reduce using rule 20 (Neg -> NOT .)
    VAR             reduce using rule 20 (Neg -> NOT .)


state 46

    (18) RelExpression -> Expression . OpRel Expression
    (19) RelExpression -> Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values
    (22) OpRel -> . GoE
    (23) OpRel -> . LoE
    (24) OpRel -> . Lower
    (25) OpRel -> . Greater
    (26) OpRel -> . IGUAL
    (27) OpRel -> . DIFF

    AND             reduce using rule 19 (RelExpression -> Expression .)
    FP              reduce using rule 19 (RelExpression -> Expression .)
    OR              reduce using rule 19 (RelExpression -> Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23
    GoE             shift and go to state 60
    LoE             shift and go to state 61
    Lower           shift and go to state 62
    Greater         shift and go to state 63
    IGUAL           shift and go to state 64
    DIFF            shift and go to state 65

    OpRel                          shift and go to state 59

state 47

    (41) Value -> AP Expression FP .

    MUL             reduce using rule 41 (Value -> AP Expression FP .)
    DIV             reduce using rule 41 (Value -> AP Expression FP .)
    MOD             reduce using rule 41 (Value -> AP Expression FP .)
    ADD             reduce using rule 41 (Value -> AP Expression FP .)
    SUB             reduce using rule 41 (Value -> AP Expression FP .)
    INT             reduce using rule 41 (Value -> AP Expression FP .)
    VAR             reduce using rule 41 (Value -> AP Expression FP .)
    IF              reduce using rule 41 (Value -> AP Expression FP .)
    WHILE           reduce using rule 41 (Value -> AP Expression FP .)
    SCAN            reduce using rule 41 (Value -> AP Expression FP .)
    PRINT           reduce using rule 41 (Value -> AP Expression FP .)
    Nint            reduce using rule 41 (Value -> AP Expression FP .)
    AP              reduce using rule 41 (Value -> AP Expression FP .)
    $end            reduce using rule 41 (Value -> AP Expression FP .)
    FC              reduce using rule 41 (Value -> AP Expression FP .)
    FP              reduce using rule 41 (Value -> AP Expression FP .)
    GoE             reduce using rule 41 (Value -> AP Expression FP .)
    LoE             reduce using rule 41 (Value -> AP Expression FP .)
    Lower           reduce using rule 41 (Value -> AP Expression FP .)
    Greater         reduce using rule 41 (Value -> AP Expression FP .)
    IGUAL           reduce using rule 41 (Value -> AP Expression FP .)
    DIFF            reduce using rule 41 (Value -> AP Expression FP .)
    AND             reduce using rule 41 (Value -> AP Expression FP .)
    OR              reduce using rule 41 (Value -> AP Expression FP .)


state 48

    (36) Values -> Values MUL Value .

    MUL             reduce using rule 36 (Values -> Values MUL Value .)
    DIV             reduce using rule 36 (Values -> Values MUL Value .)
    MOD             reduce using rule 36 (Values -> Values MUL Value .)
    ADD             reduce using rule 36 (Values -> Values MUL Value .)
    SUB             reduce using rule 36 (Values -> Values MUL Value .)
    INT             reduce using rule 36 (Values -> Values MUL Value .)
    VAR             reduce using rule 36 (Values -> Values MUL Value .)
    IF              reduce using rule 36 (Values -> Values MUL Value .)
    WHILE           reduce using rule 36 (Values -> Values MUL Value .)
    SCAN            reduce using rule 36 (Values -> Values MUL Value .)
    PRINT           reduce using rule 36 (Values -> Values MUL Value .)
    Nint            reduce using rule 36 (Values -> Values MUL Value .)
    AP              reduce using rule 36 (Values -> Values MUL Value .)
    $end            reduce using rule 36 (Values -> Values MUL Value .)
    FC              reduce using rule 36 (Values -> Values MUL Value .)
    FP              reduce using rule 36 (Values -> Values MUL Value .)
    GoE             reduce using rule 36 (Values -> Values MUL Value .)
    LoE             reduce using rule 36 (Values -> Values MUL Value .)
    Lower           reduce using rule 36 (Values -> Values MUL Value .)
    Greater         reduce using rule 36 (Values -> Values MUL Value .)
    IGUAL           reduce using rule 36 (Values -> Values MUL Value .)
    DIFF            reduce using rule 36 (Values -> Values MUL Value .)
    AND             reduce using rule 36 (Values -> Values MUL Value .)
    OR              reduce using rule 36 (Values -> Values MUL Value .)


state 49

    (37) Values -> Values DIV Value .

    MUL             reduce using rule 37 (Values -> Values DIV Value .)
    DIV             reduce using rule 37 (Values -> Values DIV Value .)
    MOD             reduce using rule 37 (Values -> Values DIV Value .)
    ADD             reduce using rule 37 (Values -> Values DIV Value .)
    SUB             reduce using rule 37 (Values -> Values DIV Value .)
    INT             reduce using rule 37 (Values -> Values DIV Value .)
    VAR             reduce using rule 37 (Values -> Values DIV Value .)
    IF              reduce using rule 37 (Values -> Values DIV Value .)
    WHILE           reduce using rule 37 (Values -> Values DIV Value .)
    SCAN            reduce using rule 37 (Values -> Values DIV Value .)
    PRINT           reduce using rule 37 (Values -> Values DIV Value .)
    Nint            reduce using rule 37 (Values -> Values DIV Value .)
    AP              reduce using rule 37 (Values -> Values DIV Value .)
    $end            reduce using rule 37 (Values -> Values DIV Value .)
    FC              reduce using rule 37 (Values -> Values DIV Value .)
    FP              reduce using rule 37 (Values -> Values DIV Value .)
    GoE             reduce using rule 37 (Values -> Values DIV Value .)
    LoE             reduce using rule 37 (Values -> Values DIV Value .)
    Lower           reduce using rule 37 (Values -> Values DIV Value .)
    Greater         reduce using rule 37 (Values -> Values DIV Value .)
    IGUAL           reduce using rule 37 (Values -> Values DIV Value .)
    DIFF            reduce using rule 37 (Values -> Values DIV Value .)
    AND             reduce using rule 37 (Values -> Values DIV Value .)
    OR              reduce using rule 37 (Values -> Values DIV Value .)


state 50

    (38) Values -> Values MOD Value .

    MUL             reduce using rule 38 (Values -> Values MOD Value .)
    DIV             reduce using rule 38 (Values -> Values MOD Value .)
    MOD             reduce using rule 38 (Values -> Values MOD Value .)
    ADD             reduce using rule 38 (Values -> Values MOD Value .)
    SUB             reduce using rule 38 (Values -> Values MOD Value .)
    INT             reduce using rule 38 (Values -> Values MOD Value .)
    VAR             reduce using rule 38 (Values -> Values MOD Value .)
    IF              reduce using rule 38 (Values -> Values MOD Value .)
    WHILE           reduce using rule 38 (Values -> Values MOD Value .)
    SCAN            reduce using rule 38 (Values -> Values MOD Value .)
    PRINT           reduce using rule 38 (Values -> Values MOD Value .)
    Nint            reduce using rule 38 (Values -> Values MOD Value .)
    AP              reduce using rule 38 (Values -> Values MOD Value .)
    $end            reduce using rule 38 (Values -> Values MOD Value .)
    FC              reduce using rule 38 (Values -> Values MOD Value .)
    FP              reduce using rule 38 (Values -> Values MOD Value .)
    GoE             reduce using rule 38 (Values -> Values MOD Value .)
    LoE             reduce using rule 38 (Values -> Values MOD Value .)
    Lower           reduce using rule 38 (Values -> Values MOD Value .)
    Greater         reduce using rule 38 (Values -> Values MOD Value .)
    IGUAL           reduce using rule 38 (Values -> Values MOD Value .)
    DIFF            reduce using rule 38 (Values -> Values MOD Value .)
    AND             reduce using rule 38 (Values -> Values MOD Value .)
    OR              reduce using rule 38 (Values -> Values MOD Value .)


state 51

    (28) Cycle -> WHILE AP Condition . FP AC Comands FC
    (11) Condition -> Condition . OR Condition2

    FP              shift and go to state 66
    OR              shift and go to state 56


state 52

    (29) Atribuition -> INT VAR EQUAL Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    INT             reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    VAR             reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    IF              reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    WHILE           reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    SCAN            reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    PRINT           reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    Nint            reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    AP              reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    $end            reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    FC              reduce using rule 29 (Atribuition -> INT VAR EQUAL Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 53

    (17) Condition3 -> AP Condition . FP
    (11) Condition -> Condition . OR Condition2

    FP              shift and go to state 67
    OR              shift and go to state 56


state 54

    (41) Value -> AP Expression . FP
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values
    (18) RelExpression -> Expression . OpRel Expression
    (19) RelExpression -> Expression .
    (22) OpRel -> . GoE
    (23) OpRel -> . LoE
    (24) OpRel -> . Lower
    (25) OpRel -> . Greater
    (26) OpRel -> . IGUAL
    (27) OpRel -> . DIFF

  ! shift/reduce conflict for FP resolved as shift
    FP              shift and go to state 47
    ADD             shift and go to state 22
    SUB             shift and go to state 23
    AND             reduce using rule 19 (RelExpression -> Expression .)
    OR              reduce using rule 19 (RelExpression -> Expression .)
    GoE             shift and go to state 60
    LoE             shift and go to state 61
    Lower           shift and go to state 62
    Greater         shift and go to state 63
    IGUAL           shift and go to state 64
    DIFF            shift and go to state 65

  ! FP              [ reduce using rule 19 (RelExpression -> Expression .) ]

    OpRel                          shift and go to state 59

state 55

    (9) Conditional -> IF AP Condition FP . AC Comands FC ELSE AC Comands FC
    (10) Conditional -> IF AP Condition FP . AC Comands FC

    AC              shift and go to state 68


state 56

    (11) Condition -> Condition OR . Condition2
    (13) Condition2 -> . Condition2 AND Condition3
    (14) Condition2 -> . Condition3
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    NOT             shift and go to state 45
    Nint            shift and go to state 20
    VAR             shift and go to state 28

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Condition2                     shift and go to state 69
    Condition3                     shift and go to state 42
    Neg                            shift and go to state 43
    RelExpression                  shift and go to state 44
    Expression                     shift and go to state 46
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 57

    (13) Condition2 -> Condition2 AND . Condition3
    (15) Condition3 -> . Neg Condition
    (16) Condition3 -> . RelExpression
    (17) Condition3 -> . AP Condition FP
    (20) Neg -> . NOT
    (21) Neg -> .
    (18) RelExpression -> . Expression OpRel Expression
    (19) RelExpression -> . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

  ! shift/reduce conflict for AP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for Nint resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    AP              shift and go to state 39
    NOT             shift and go to state 45
    Nint            shift and go to state 20
    VAR             shift and go to state 28

  ! AP              [ reduce using rule 21 (Neg -> .) ]
  ! NOT             [ reduce using rule 21 (Neg -> .) ]
  ! Nint            [ reduce using rule 21 (Neg -> .) ]
  ! VAR             [ reduce using rule 21 (Neg -> .) ]

    Condition3                     shift and go to state 70
    Neg                            shift and go to state 43
    RelExpression                  shift and go to state 44
    Expression                     shift and go to state 46
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 58

    (15) Condition3 -> Neg Condition .
    (11) Condition -> Condition . OR Condition2

  ! shift/reduce conflict for OR resolved as shift
    AND             reduce using rule 15 (Condition3 -> Neg Condition .)
    FP              reduce using rule 15 (Condition3 -> Neg Condition .)
    OR              shift and go to state 56

  ! OR              [ reduce using rule 15 (Condition3 -> Neg Condition .) ]


state 59

    (18) RelExpression -> Expression OpRel . Expression
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    Nint            shift and go to state 20
    VAR             shift and go to state 28
    AP              shift and go to state 12

    Expression                     shift and go to state 71
    Values                         shift and go to state 13
    Value                          shift and go to state 17

state 60

    (22) OpRel -> GoE .

    Nint            reduce using rule 22 (OpRel -> GoE .)
    VAR             reduce using rule 22 (OpRel -> GoE .)
    AP              reduce using rule 22 (OpRel -> GoE .)


state 61

    (23) OpRel -> LoE .

    Nint            reduce using rule 23 (OpRel -> LoE .)
    VAR             reduce using rule 23 (OpRel -> LoE .)
    AP              reduce using rule 23 (OpRel -> LoE .)


state 62

    (24) OpRel -> Lower .

    Nint            reduce using rule 24 (OpRel -> Lower .)
    VAR             reduce using rule 24 (OpRel -> Lower .)
    AP              reduce using rule 24 (OpRel -> Lower .)


state 63

    (25) OpRel -> Greater .

    Nint            reduce using rule 25 (OpRel -> Greater .)
    VAR             reduce using rule 25 (OpRel -> Greater .)
    AP              reduce using rule 25 (OpRel -> Greater .)


state 64

    (26) OpRel -> IGUAL .

    Nint            reduce using rule 26 (OpRel -> IGUAL .)
    VAR             reduce using rule 26 (OpRel -> IGUAL .)
    AP              reduce using rule 26 (OpRel -> IGUAL .)


state 65

    (27) OpRel -> DIFF .

    Nint            reduce using rule 27 (OpRel -> DIFF .)
    VAR             reduce using rule 27 (OpRel -> DIFF .)
    AP              reduce using rule 27 (OpRel -> DIFF .)


state 66

    (28) Cycle -> WHILE AP Condition FP . AC Comands FC

    AC              shift and go to state 72


state 67

    (17) Condition3 -> AP Condition FP .

    AND             reduce using rule 17 (Condition3 -> AP Condition FP .)
    FP              reduce using rule 17 (Condition3 -> AP Condition FP .)
    OR              reduce using rule 17 (Condition3 -> AP Condition FP .)


state 68

    (9) Conditional -> IF AP Condition FP AC . Comands FC ELSE AC Comands FC
    (10) Conditional -> IF AP Condition FP AC . Comands FC
    (2) Comands -> . Comand Comands
    (3) Comands -> . Comand
    (4) Comand -> . Atribuition
    (5) Comand -> . Conditional
    (6) Comand -> . Expression
    (7) Comand -> . Cycle
    (8) Comand -> . IO
    (29) Atribuition -> . INT VAR EQUAL Expression
    (30) Atribuition -> . VAR EQUAL Expression
    (31) Atribuition -> . INT VAR
    (9) Conditional -> . IF AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> . IF AP Condition FP AC Comands FC
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (28) Cycle -> . WHILE AP Condition FP AC Comands FC
    (42) IO -> . INPUT
    (43) IO -> . OUTPUT
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (44) INPUT -> . SCAN Expression
    (45) OUTPUT -> . PRINT VAR
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    INT             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 14
    SCAN            shift and go to state 18
    PRINT           shift and go to state 19
    Nint            shift and go to state 20
    AP              shift and go to state 12

    Comands                        shift and go to state 73
    Comand                         shift and go to state 3
    Atribuition                    shift and go to state 4
    Conditional                    shift and go to state 5
    Expression                     shift and go to state 6
    Cycle                          shift and go to state 7
    IO                             shift and go to state 8
    Values                         shift and go to state 13
    INPUT                          shift and go to state 15
    OUTPUT                         shift and go to state 16
    Value                          shift and go to state 17

state 69

    (11) Condition -> Condition OR Condition2 .
    (13) Condition2 -> Condition2 . AND Condition3

  ! shift/reduce conflict for AND resolved as shift
    FP              reduce using rule 11 (Condition -> Condition OR Condition2 .)
    OR              reduce using rule 11 (Condition -> Condition OR Condition2 .)
    AND             shift and go to state 57

  ! AND             [ reduce using rule 11 (Condition -> Condition OR Condition2 .) ]


state 70

    (13) Condition2 -> Condition2 AND Condition3 .

    AND             reduce using rule 13 (Condition2 -> Condition2 AND Condition3 .)
    FP              reduce using rule 13 (Condition2 -> Condition2 AND Condition3 .)
    OR              reduce using rule 13 (Condition2 -> Condition2 AND Condition3 .)


state 71

    (18) RelExpression -> Expression OpRel Expression .
    (33) Expression -> Expression . ADD Values
    (34) Expression -> Expression . SUB Values

    AND             reduce using rule 18 (RelExpression -> Expression OpRel Expression .)
    FP              reduce using rule 18 (RelExpression -> Expression OpRel Expression .)
    OR              reduce using rule 18 (RelExpression -> Expression OpRel Expression .)
    ADD             shift and go to state 22
    SUB             shift and go to state 23


state 72

    (28) Cycle -> WHILE AP Condition FP AC . Comands FC
    (2) Comands -> . Comand Comands
    (3) Comands -> . Comand
    (4) Comand -> . Atribuition
    (5) Comand -> . Conditional
    (6) Comand -> . Expression
    (7) Comand -> . Cycle
    (8) Comand -> . IO
    (29) Atribuition -> . INT VAR EQUAL Expression
    (30) Atribuition -> . VAR EQUAL Expression
    (31) Atribuition -> . INT VAR
    (9) Conditional -> . IF AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> . IF AP Condition FP AC Comands FC
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (28) Cycle -> . WHILE AP Condition FP AC Comands FC
    (42) IO -> . INPUT
    (43) IO -> . OUTPUT
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (44) INPUT -> . SCAN Expression
    (45) OUTPUT -> . PRINT VAR
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    INT             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 14
    SCAN            shift and go to state 18
    PRINT           shift and go to state 19
    Nint            shift and go to state 20
    AP              shift and go to state 12

    Comands                        shift and go to state 74
    Comand                         shift and go to state 3
    Atribuition                    shift and go to state 4
    Conditional                    shift and go to state 5
    Expression                     shift and go to state 6
    Cycle                          shift and go to state 7
    IO                             shift and go to state 8
    Values                         shift and go to state 13
    INPUT                          shift and go to state 15
    OUTPUT                         shift and go to state 16
    Value                          shift and go to state 17

state 73

    (9) Conditional -> IF AP Condition FP AC Comands . FC ELSE AC Comands FC
    (10) Conditional -> IF AP Condition FP AC Comands . FC

    FC              shift and go to state 75


state 74

    (28) Cycle -> WHILE AP Condition FP AC Comands . FC

    FC              shift and go to state 76


state 75

    (9) Conditional -> IF AP Condition FP AC Comands FC . ELSE AC Comands FC
    (10) Conditional -> IF AP Condition FP AC Comands FC .

    ELSE            shift and go to state 77
    INT             reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    VAR             reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    IF              reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    WHILE           reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    SCAN            reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    PRINT           reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    Nint            reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    AP              reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    $end            reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)
    FC              reduce using rule 10 (Conditional -> IF AP Condition FP AC Comands FC .)


state 76

    (28) Cycle -> WHILE AP Condition FP AC Comands FC .

    INT             reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    VAR             reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    IF              reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    WHILE           reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    SCAN            reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    PRINT           reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    Nint            reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    AP              reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    $end            reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)
    FC              reduce using rule 28 (Cycle -> WHILE AP Condition FP AC Comands FC .)


state 77

    (9) Conditional -> IF AP Condition FP AC Comands FC ELSE . AC Comands FC

    AC              shift and go to state 78


state 78

    (9) Conditional -> IF AP Condition FP AC Comands FC ELSE AC . Comands FC
    (2) Comands -> . Comand Comands
    (3) Comands -> . Comand
    (4) Comand -> . Atribuition
    (5) Comand -> . Conditional
    (6) Comand -> . Expression
    (7) Comand -> . Cycle
    (8) Comand -> . IO
    (29) Atribuition -> . INT VAR EQUAL Expression
    (30) Atribuition -> . VAR EQUAL Expression
    (31) Atribuition -> . INT VAR
    (9) Conditional -> . IF AP Condition FP AC Comands FC ELSE AC Comands FC
    (10) Conditional -> . IF AP Condition FP AC Comands FC
    (32) Expression -> . Values
    (33) Expression -> . Expression ADD Values
    (34) Expression -> . Expression SUB Values
    (28) Cycle -> . WHILE AP Condition FP AC Comands FC
    (42) IO -> . INPUT
    (43) IO -> . OUTPUT
    (35) Values -> . Value
    (36) Values -> . Values MUL Value
    (37) Values -> . Values DIV Value
    (38) Values -> . Values MOD Value
    (44) INPUT -> . SCAN Expression
    (45) OUTPUT -> . PRINT VAR
    (39) Value -> . Nint
    (40) Value -> . VAR
    (41) Value -> . AP Expression FP

    INT             shift and go to state 9
    VAR             shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 14
    SCAN            shift and go to state 18
    PRINT           shift and go to state 19
    Nint            shift and go to state 20
    AP              shift and go to state 12

    Comands                        shift and go to state 79
    Comand                         shift and go to state 3
    Atribuition                    shift and go to state 4
    Conditional                    shift and go to state 5
    Expression                     shift and go to state 6
    Cycle                          shift and go to state 7
    IO                             shift and go to state 8
    Values                         shift and go to state 13
    INPUT                          shift and go to state 15
    OUTPUT                         shift and go to state 16
    Value                          shift and go to state 17

state 79

    (9) Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands . FC

    FC              shift and go to state 80


state 80

    (9) Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .

    INT             reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    VAR             reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    IF              reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    WHILE           reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    SCAN            reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    PRINT           reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    Nint            reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    AP              reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    $end            reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)
    FC              reduce using rule 9 (Conditional -> IF AP Condition FP AC Comands FC ELSE AC Comands FC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AP in state 26 resolved as shift
WARNING: shift/reduce conflict for NOT in state 26 resolved as shift
WARNING: shift/reduce conflict for Nint in state 26 resolved as shift
WARNING: shift/reduce conflict for VAR in state 26 resolved as shift
WARNING: shift/reduce conflict for AP in state 32 resolved as shift
WARNING: shift/reduce conflict for NOT in state 32 resolved as shift
WARNING: shift/reduce conflict for Nint in state 32 resolved as shift
WARNING: shift/reduce conflict for VAR in state 32 resolved as shift
WARNING: shift/reduce conflict for AP in state 39 resolved as shift
WARNING: shift/reduce conflict for NOT in state 39 resolved as shift
WARNING: shift/reduce conflict for Nint in state 39 resolved as shift
WARNING: shift/reduce conflict for VAR in state 39 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for AP in state 43 resolved as shift
WARNING: shift/reduce conflict for NOT in state 43 resolved as shift
WARNING: shift/reduce conflict for Nint in state 43 resolved as shift
WARNING: shift/reduce conflict for VAR in state 43 resolved as shift
WARNING: shift/reduce conflict for FP in state 54 resolved as shift
WARNING: shift/reduce conflict for AP in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for Nint in state 56 resolved as shift
WARNING: shift/reduce conflict for VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for AP in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for Nint in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
